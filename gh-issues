#!/usr/bin/php
<?php

class getIssues {
	
	private $_url	= '/api/v2/json/issues/list/:user/:repo/:status';
	private $_host	= 'github.com';
	private $_settings	= array(
		':status'	=> 'open',
		':user'		=> 'enygma',
		':repo'		=> 'joind.in'
	);
	private $_file	= '';
	private $_ttl	= 172800;
	private $_args	= array();

	public function __construct(){
		$this->_file='/tmp/'.date('Ymd').'_:repo_issues';
		$this->_ttl=$this->_ttl*10;
	}
	//--------------
	/**
	 * Main function
	 */
	public function run(){
		$file=str_replace(array_keys($this->_settings),$this->_settings,$this->_file);
		if(count($_SERVER['argv'])>1){
			$this->_args=$_SERVER['argv'];
		}
		$force		= (isset($this->_args[1]) && $this->_args[1]) ? true : false;
		$issues_list= $this->_fetch($file,$force);
		$this->_display($issues_list->issues); 
		
		//print_r($issues_list->issues);
	}
	
	/**
	 * Build and send the request to the github API
	 */
	private function _request($path){
		$ret=false;
		
		if($fp=@fsockopen($this->_host,80,$errno,$errstr,10)){
			$req=sprintf("GET ".$path." HTTP/1.0\r\nHost: ".$this->_host."\r\n\r\n");
			fwrite($fp,$req);
			while(!feof($fp)){ $ret.=fread($fp,1024); }
			fclose($fp);
			
			$p=explode("\r\n\r\n",$ret);
			return $p[1];
		}else{
			//we cant get it after all, just use what we have
			return false;
		}
	}
	
	/**
	 * Either fetch the cache file or get the new issues list from remote site
	 */
	private function _fetch($file,$force=false){
		//check the TTL on the file
		if( (file_exists($file) && filectime($file)<=time()-$this->_ttl) || !file_exists($file) || $force){

			$path = str_replace(array_keys($this->_settings),$this->_settings,$this->_url);

			if($response=$this->_request($path)){
				$fp=fopen($file,'w+');
				if($fp){
					fwrite($fp,$response);
					fclose($fp);
				}else{ throw new Exception('Cannot open cache file!'); }
			}else{
				//We tried to make the update request, but couldn't
				//If the file's already there, leave it - otherwise....
				if(!is_file($file)){
					throw new Exception('Cannot fetch issues information!');
				}
			}
		}
		return json_decode(file_get_contents($file));
	}
	
	/**
	 * Push the issues information out to the right display method
	 * @param array $issues Issues list info
	 */
	private function _display($issues){
		$out	= '';
		$action	= (isset($this->_args[1])) ? strtolower($this->_args[1]) : 'list';
		
		$func='_display'.ucwords($action);
		if(method_exists($this,$func)){
			$out=$this->$func($issues);
		}else{ throw new Exception('Incorrect action!'); }
		echo "\n".$out."\n";
	}
	
	##########################
	# Display Methods
	##########################	
	
	/**
	 * Display issues in a summary list
	 * @param array #issues Issues list info
	 */
	private function _displayList($issues){
		$out='';
		foreach($issues as $k => $issue){
			$out.='['.$issue->number.'] '.$issue->title."\n";
		}
		$out.="\n".'Use get_issues detail [number] to get more info...';
		return $out;
	}
	
	/**
	 * Find the issue and display its details
	 * @param array $issues Issues list info
	 */
	private function _displayDetail($issues){
		$out='';
		if(isset($this->_args[2])){
			$detail_id=$this->_args[2];
		}else{ throw new Exception('Invalid Detail ID!'); }
		
		foreach($issues as $k=>$issue){
			if($issue->number==$detail_id){
				$out.='Issue #'.$detail_id.": ";
				$out.=$issue->title."\n+++++++++\n".$issue->body;
				$out.="\n\n";
				$out.="created  : ".$issue->created_at."\n";
				$out.="labels   : ".implode(', ',$issue->labels);
			}
		}
		if(empty($out)){
			throw new Exception('Detail ID Not Found!');
		}
		return $out;
	}
	
	/**
	 * Force a refresh of the data from the remote source
	 */
	private function _displayForce(){ $out='Update forced!'; return $out; }
	
	/**
	 * Echo out some help information
	 */
	private function _displayHelp(){
		$out='Help Text';
		return $out;
	}
	
}

$issues=new getIssues();
try {
	$issues->run();
}catch(Exception $e){
	echo "########################################\n";
	echo '# ERROR: '.$e->getMessage()."\n";
	echo "########################################\n";
}

?>
